#set ($myClassName = "${glGenMetaDataClassName}")

using System;
using System.Collections;
using ${glPackageBaseCommonHelper};

namespace ${glPackageBaseCommon} {

    /// <summary>
    /// The sigleton class that has generate-meta-data(GenMetaData).
    /// Author: ${database.ClassAuthor}
    /// </summary>
    public class ${myClassName} {

        /// <summary>Singleton instance.</summary>
        private static readonly ${myClassName} _instance = new ${myClassName}();

        /// <summary>The helper of map-list-string.</summary>
        protected ${glMapListStringName} _mapListString = new ${glMapListStringImplName}();

        /// <summary>
        /// Constructor
        /// </summary>
        private ${myClassName}() {
            _mapListString = new ${glMapListStringImplName}();
            _mapListString.Delimiter = ";";
        }

        /// <summary>
        /// Get instance.
        /// </summary>
        /// <returns>Singleton instance.</returns>
        public static ${myClassName} GetInstance() {
            return _instance;
        }

        // =========================================================================================
        //                                                                     Generated method name
        //                                                                     =====================
        public String GetMethodNameOfGetCountAll() {
            return "GetCountAll";
        }

        public String GetMethodNameOfGetListAll() {
            return "GetListAll";
        }

        public String GetMethodNameOfGetEntity() {
            return "GetEntity";
        }

        public String GetMethodNameOfSelectCountIgnoreFetchScope() {
            return "SelectCountIgnoreFetchScope";
        }

        public String GetMethodNameOfSelectEntity() {
            return "SelectEntity";
        }

        public String GetMethodNameOfSelectList() {
            return "SelectList";
        }





        // =========================================================================================
        //                                             Only when having generated, the effective one
        //                                             =============================================
        /// <sumarry>
        /// Get the property-value of targetLanguage.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public String GetTargetLanguage() {
            return "${database.TargetLanguage}";
        }

        /// <sumarry>
        /// Get the property-value of templateFileExtension.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public String GetTemplateFileExtension() {
            return "${database.TemplateFileExtension}";
        }

        /// <sumarry>
        /// Get the property-value of classFileExtension.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public String GetClassFileExtension() {
            return "${database.ClassFileExtension}";
        }

        /// <sumarry>
        /// Get the property-value of templateFileEncoding.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public String GetTemplateEncoding() {
            return "${database.TemplateFileEncoding}";
        }

        /// </sumarry>
        /// Get the property-value of classAuthor.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public String GetClassAuthor() {
            return "${database.ClassAuthor}";
        }

        /// <sumarry>
        /// Is available entity lazy load?
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public bool IsAvailableEntityLazyLoad() {
            return ${database.isAvailableEntityLazyLoad()};
        }

        /// <sumarry>
        /// Is java name of table same as db name? Answer is ${database.isJavaNameOfTableSameAsDbName()}!
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public bool IsJavaNameOfTableSameAsDbName() {
            return ${database.isJavaNameOfTableSameAsDbName()};
        }

        /// <sumarry>
        /// Is java name of column same as db name? Answer is ${database.isJavaNameOfColumnSameAsDbName()}!
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public bool IsJavaNameOfColumnSameAsDbName() {
            return ${database.isJavaNameOfColumnSameAsDbName()};
        }

        /// <sumarry>
        /// is available common-column-setup interceptor to behavior?
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public bool IsAvailableCommonColumnSetupInterceptorToBehavior() {
            return ${database.isAvailableCommonColumnSetupInterceptorToBehavior()};
        }

        /// <sumarry>
        /// Is available generics? Answer is ${database.isAvailableGenerics()}!
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public bool IsAvailableGenerics() {
            return ${database.isAvailableGenerics()};
        }

        /// <sumarry>
        /// Get the property-value of projectPrefix.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public String GetProjectPrefix() {
            return "${database.ProjectPrefix}";
        }

        /// <sumarry>
        /// Get the property-value of basePrefix.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public String GetBasePrefix() {
            return "${database.BasePrefix}";
        }

    /// <sumarry>
    /// Get the property-value of baseSuffixForEntity.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetBaseSuffixForEntity() {
            return "${database.BaseSuffixForEntity}";
        }

    /// <sumarry>
    /// Get the property-value of daoDiconNamespace.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetDaoDiconNamespace() {
            return "${database.DaoDiconNamespace}";
        }

    /// <sumarry>
    /// Get the property-value of daoDiconPackageName.
    /// </sumarry>
    /// <returns>The property-value.</sumarry>
        public String GetDaoDiconPackageName() {
            return "${database.DaoDiconPackageName}";
        }

    /// <sumarry>
    /// Get the property-value of daoDiconFileName.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetDaoDiconFileName() {
            return "${database.DaoDiconFileName}";
        }

    /// <sumarry>
    /// Get the property-value of j2eeDiconResourceName.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetJ2eeDiconResourceName() {
            return "${database.J2eeDiconResourceName}";
        }

    /// <sumarry>
    /// Get the property-value of requiredTxComponentName.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetRequiredTxComponentName() {
            return "${database.requiredTxComponentName}";
        }

    /// <sumarry>
    /// Get the property-value of baseCommonPackage.
    ///
    /// <returns>The property-value.</returns>
        public String GetBaseCommonPackage() {
            return "${database.BaseCommonPackage}";
        }

    /// <sumarry>
    /// Get the property-value of baseBehaviorPackage.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetBaseBehaviorPackage() {
            return "${database.BaseBehaviorPackage}";
        }

    /// <sumarry>
    /// Get the property-value of baseDaoPackage.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetBaseDaoPackage() {
            return "${database.BaseDaoPackage}";
        }

    /// <sumarry>
    /// Get the property-value of baseEntityPackage.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetBaseEntityPackage() {
            return "${database.BaseEntityPackage}";
        }

    /// <sumarry>
    /// Get the property-value of conditionBeanPackage.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetConditionBeanPackage() {
            return "${database.ConditionBeanPackage}";
        }

    /// <sumarry>
    /// Get the property-value of extendedDaoPackage.
    /// </sumarry>
    /// <returns>The property-value.</retuns>
        public String GetExtendedDaoPackage() {
            return "${database.ExtendedDaoPackage}";
        }

    /// <sumarry>
    /// Get the property-value of extendedBehaviorPackage.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetExtendedBehaviorPackage() {
            return "${database.ExtendedBehaviorPackage}";
        }

    /// <sumarry>
    /// Get the property-value of extendedEntityPackage.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetExtendedEntityPackage() {
            return "${database.ExtendedEntityPackage}";
        }

    /// <sumarry>
    /// Get the property-map of sequenceDefinitionMap.
    /// </sumarry>
    /// <returns>The property-map.</returns>
        public System.Collections.IDictionary GetSequenceDefinitionMapAsString() {
            String property = "${database.SequenceDefinitionMapAsStringRemovedLineSeparator}";
            return _mapListString.generateMap(property);
        }

    /// <sumarry>
    /// Get the property-map of IdentityDefinitionMap.
    /// </sumarry>
    /// <returns>The property-map.</returns>
        public System.Collections.IDictionary GetIdentityDefinitionMapAsString() {
            String property = "${database.IdentityDefinitionMapAsStringRemovedLineSeparator}";
            return _mapListString.generateMap(property);
        }

    /// <sumarry>
    /// Get the property-value of updateDateFieldName.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetUpdateDateFieldName() {
            return "${database.UpdateDateFieldName}";
        }

    /// <sumarry>
    /// Get the property-value of versionNoFieldName.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetVersionNoFieldName() {
            return "${database.VersionNoFieldName}";
        }

    /// <sumarry>
    /// Get the property-map of commonColumnMapAsStringRemovedLineSeparator.
    /// </sumarry>
    /// <returns>The property-map.</returns>
        public System.Collections.IDictionary GetCommonColumnMap() {
            String property = "${database.CommonColumnMapAsStringRemovedLineSeparator}";
            return _mapListString.generateMap(property);
        }


        /// <sumarry>
        /// Get the property-value of fetchPageDefaultFetchSize.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public int GetSqlClauseDefaultFetchSize() {
            return ${database.FetchPageDefaultFetchSize};
        }

        /// <sumarry>
        /// is available use absolute when result set fetch-narrowing?
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public bool IsAvailableUseAbsoluteWhenResultSetFetchNarrowing() {
            return ${database.isAvailableUseAbsoluteWhenResultSetFetchNarrowing()};
        }

        /// <sumarry>
        /// Get the property-value of selectQueryTimeout.
        /// </sumarry>
        /// <returns>The property-value.</returns>
        public int GetSelectQueryTimeout() {
            return ${database.SelectQueryTimeout};
        }

        /**
         * Get the value of 'extractAcceptStartBrace'.
         *
         * @return The property-value. (NotNull)
         */
        public String GetExtractAcceptStartBrace() {
            return "${database.extractAcceptStartBrace}";
        }

        /**
         * Get the value of 'extractAcceptEndBrace'.
         *
         * @return The property-value. (NotNull)
         */
        public String GetExtractAcceptEndBrace() {
            return "${database.extractAcceptEndBrace}";
        }

        /**
         * Get the value of 'extractAcceptDelimiter'.
         *
         * @return The property-value. (NotNull)
         */
        public String GetExtractAcceptDelimiter() {
            return "${database.extractAcceptDelimiter}";
        }

        /**
         * Get the value of 'extractAcceptEqual'.
         *
         * @return The property-value. (NotNull)
         */
        public String GetExtractAcceptEqual() {
            return "${database.extractAcceptEqual}";
        }

    /// <sumarry>
    /// Get the property-map of jdbcToJavaNativeMap.
    /// </sumarry>
    /// <returns>The property-map.</returns>
        public System.Collections.IDictionary GetJdbcToJavaNativeMap() {
            String property = "${database.JdbcToJavaNativeAsStringRemovedLineSeparator}";
            return _mapListString.generateMap(property);
        }

    /// <sumarry>
    /// Get the property-value of wildCard.
    /// </sumarry>
    /// <returns>The property-value.</returns>
        public String GetWildCard() {
            return "${database.WildCard}";
        }
    }
}
