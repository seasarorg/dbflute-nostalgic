
using System;
using System.Collections;
using Seasar.Framework.Container;

namespace ${glPackageBaseCommon} {

    /// <summary>
    /// Lazy-load container.
    /// Author: ${database.ClassAuthor}
    /// </summary>
    public class ${glLazyLoadContainerClassName} {

        /// <summary>Singleton instance.</summary>
        protected static readonly ${glLazyLoadContainerClassName} _instance = new ${glLazyLoadContainerClassName}();

        // =====================================================================================
        //                                                                             Attribute
        //                                                                             =========
        #region Attribute
        /// <summary>Dao-selector instance.</summary>
        protected ${glDaoSelectorInterfaceName} _daoSelector;

        /// <summary>Container.</summary>
        protected IS2Container _container;
        #endregion

        /// <summary>
        /// Constructor
        /// </summary>
        protected ${glLazyLoadContainerClassName}() {
        }

        /// <summary>
        /// Get instance.
        /// </summary>
        /// <returns>Singleton instance.</returns>
        public static ${glLazyLoadContainerClassName} GetInstance() {
            return _instance;
        }

        // =====================================================================================
        //                                                                          Dao Selector
        //                                                                          ============
        #region Dao Selector

        /// <summary>
        ///  The property of dao-selector.
        /// </summary>
        public ${glDaoSelectorInterfaceName} DaoSelector {
            get { return _daoSelector; }
            set { _daoSelector = value; }
        }
        #endregion

        /// <summary>
        /// Get container.
        /// </summary>
        /// <returns>Container.</returns>
        public IS2Container GetContainer() {
            return _container;
        }

        /// <summary>
        /// Get container.
        /// </summary>
        /// <param name="container">Container.</param>
        public void SetContainer(IS2Container container) {
            _container = container;
        }

        /// <summary>
        /// Get container.
        /// </summary>
        /// <param name="clazz">Dao-class.</param>
        /// <return>Dao-instance.</return>
        public ${glDaoReadableInterfaceName} GetDaoInstance(Type clazz) {
            if (this.DaoSelector == null) {
                String msg = "DaoSelector is null. If you use LazyLoad, ";
                msg = msg + "initialize LazyLoadContainer.";
                throw new ArgumentOutOfRangeException(msg);
            }
            return (${glDaoReadableInterfaceName})this.DaoSelector.GetRDao(clazz);
        }
    }
}
