
using System;
using System.Collections;
using ${glPackageBaseCommonSqlClause};

namespace ${glPackageBaseCommonCBean} {

    /// <summary>
    /// The order-by-bean as simple.
    /// 
    /// This bean is supported:
    ///   o OrderBy
    /// 
    /// - ${glSimpleOrderByBeanName} pb = new ${glSimpleOrderByBeanName}();
    /// - pb.FetchFirst(1);
    /// - pb.RegisterOrderByAsc("BOOK_ID");
    /// - ...
    /// 
    /// Author: ${database.ClassAuthor}
    /// </summary>
    public class ${glSimpleOrderByBeanName} : ${glOrderByBeanInterfaceName} {

        // =====================================================================================
        //                                                                             Attribute
        //                                                                             =========
        /** SQL clause instance. */
        protected readonly ${glSqlClauseName} _sqlClause;

        // =====================================================================================
        //                                                                           Constructor
        //                                                                           ===========
        /**
         * Constructor.
         */
        public ${glSimpleOrderByBeanName}() {
            _sqlClause = new ${glSqlClauseName}${database.DaoGenDbName}("Dummy");
        }

        protected ${glSqlClauseName} SqlClause {
            get { return _sqlClause; }
        }

	    /**
	     * Get order-by clause.
	     * 
	     * @return Order-by clause. (NotNull)
	     */
	    public String OrderByClause { get { return this.SqlClause.GetOrderByClause(); } }

        // =====================================================================================
        //                                                                               OrderBy
        //                                                                               =======
        /// <summary>
        /// The property of sql component of order-by clause.
        /// </summary>
        public ${glOrderByClauseName} SqlComponentOfOrderByClause {
            get { return this.SqlClause.GetSqlComponentOfOrderByClause(); }
        }

        /**
         * ${database.ImplementComment}
         * 
         * @return this. (NotNull)
         */
        public ${glOrderByBeanInterfaceName} ClearOrderBy() {
            this.SqlClause.ClearOrderBy();
            return this;
        }

	    /**
	     * ${database.ImplementComment}
	     * 
	     * @return this. (NotNull)
	     */
        public ${glOrderByBeanInterfaceName} IgnoreOrderBy() {
            this.SqlClause.IgnoreOrderBy();
            return this;
        }

	    /**
	     * ${database.ImplementComment}
	     * 
	     * @return this. (NotNull)
	     */
        public ${glOrderByBeanInterfaceName} MakeOrderByEffective() {
            this.SqlClause.MakeOrderByEffective();
            return this;
        }

	    public ${glOrderByBeanInterfaceName} RegisterOrderByAsc(String orderByProperty) {
	        this.SqlClause.RegisterOrderBy(orderByProperty, null, true);
	        return this;
	    }

	    public ${glOrderByBeanInterfaceName} RegisterOrderByDesc(String orderByProperty) {
	        this.SqlClause.RegisterOrderBy(orderByProperty, null, false);
	        return this;
	    }

	    public ${glOrderByBeanInterfaceName} ReverseOrderBy_Or_OverrideOrderByAsc(String orderByProperty) {
	        this.SqlClause.ReverseOrderBy_Or_OverrideOrderBy(orderByProperty, null, true);
	        return this;
	    }

	    public ${glOrderByBeanInterfaceName} ReverseOrderBy_Or_OverrideOrderByDesc(String orderByProperty) {
	        this.SqlClause.ReverseOrderBy_Or_OverrideOrderBy(orderByProperty, null, false);
	        return this;
	    }
    }
}
