
#set ($myClassName = "${glOrderByElementName}")

using System;
using System.Text;

namespace ${glPackageBaseCommonSqlClause} {

    /// <summary>
    /// Order-by element.
    /// <![CDATA[
    ///   For example, if you make order-by 'order BOOK.BOOK_ID asc', the way is as follows:
    ///       /-----------------------------------------------------
    ///       ${myClassName} orderByElement = new ${myClassName}();
    ///       orderByElement.AliasName = "BOOK";
    ///       orderByElement.ColumnName = "BOOK_ID";
    ///       orderByElement.SetupAsc();
    ///       -------------/
    /// ]]>
    /// Author: ${database.ClassAuthor}
    /// </summary>
    [System.Serializable]
    public class ${myClassName} {

        // =====================================================================================
        //                                                                             Attribute
        //                                                                             =========
        /** The value of alias name. */
        protected String _aliasName;

        /** The value of column name. */
        protected String _columnName;

        /** The value of registered alias name. */
        protected String _registeredAliasName;

        /** The value of registered column name. */
        protected String _registeredColumnName;

        /** The value of ascDesc. */
        protected String _ascDesc = "asc";

        // =====================================================================================
        //                                                                          GetterSetter
        //                                                                          ============
        public String AliasName {
            get { return _aliasName; }
            set { _aliasName = value; }
        }
        public String ColumnName {
            get { return _columnName; }
            set { _columnName = value; }
        }
        public String RegisteredAliasName {
            get { return _registeredAliasName; }
            set { _registeredAliasName = value; }
        }
        public String RegisteredColumnName {
            get { return _registeredColumnName; }
            set { _registeredColumnName = value; }
        }
        public String AscDesc {
            get { return _ascDesc; }
            set { _ascDesc = value; }
        }

        // =====================================================================================
        //                                                                              Behavior
        //                                                                              ========
        public void SetupAsc() {
            _ascDesc = "asc";
        }

        public void SetupDesc() {
            _ascDesc = "desc";
        }

        public void Reverse() {
            if (_ascDesc == null) {
                String msg = "The attribute[ascDesc] should not be null.";
                throw new SystemException(msg);
            }
            if (_ascDesc.Equals("asc")) {
                _ascDesc = "desc";
            } else if (_ascDesc.Equals("desc")) {
                _ascDesc = "asc";
            } else {
                String msg = "The attribute[ascDesc] should be asc or desc: but ascDesc=" + _ascDesc;
                throw new SystemException(msg);
            }
        }

        public bool IsAsc() {
            if (_ascDesc == null) {
                String msg = "The attribute[ascDesc] should not be null.";
                throw new SystemException(msg);
            }
            if (_ascDesc.Equals("asc")) {
                return true;
            } else if (_ascDesc.Equals("desc")) {
                return false;
            } else {
                String msg = "The attribute[ascDesc] should be asc or desc: but ascDesc=" + _ascDesc;
                throw new SystemException(msg);
            }
        }

        public String GetColumnFullName() {
            StringBuilder sb = new StringBuilder();
            if (_aliasName != null) {
                sb.Append(_aliasName).Append(".");
            }
            if (_columnName == null) {
                String msg = "The attribute[columnName] should not be null.";
                throw new SystemException(msg);
            }
            sb.Append(_columnName);
            return sb.ToString();
        }

        public String GetRegisteredColumnFullName() {
            StringBuilder sb = new StringBuilder();
            if (_registeredAliasName != null) {
                sb.Append(_registeredAliasName).Append(".");
            }
            if (_registeredColumnName == null) {
                String msg = "The attribute[registeredColumnName] should not be null.";
                throw new SystemException(msg);
            }
            sb.Append(_registeredColumnName);
            return sb.ToString();
        }

        public String GetElementClause() {
            if (_ascDesc == null) {
                String msg = "The attribute[ascDesc] should not be null.";
                throw new SystemException(msg);
            }
            StringBuilder sb = new StringBuilder();
            sb.Append(GetColumnFullName()).Append(" ").Append(_ascDesc);
            return sb.ToString();
        }

        // =====================================================================================
        //                                                                        Basic Override
        //                                                                        ==============
        /**
         * This method overrides the method that is declared at super.
         * 
         * @return View-string of all-columns value.
         */
        public override String ToString() {
            StringBuilder sb = new StringBuilder();
            sb.Append("aliasName=").Append(_aliasName);
            sb.Append(" columnName=").Append(_columnName);
            sb.Append(" registeredAliasName=").Append(_registeredAliasName);
            sb.Append(" registeredColumnName=").Append(_registeredColumnName);
            sb.Append(" ascDesc=").Append(_ascDesc);
            return sb.ToString();
        }
    }
}
