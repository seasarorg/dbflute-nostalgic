package ${glPackageBaseCommon};

/**
 * Lazy-load container.
 * 
 * @author ${database.ClassAuthor}
 * @deprecated
 */
public class ${glLazyLoadContainerClassName} {

    /** Singleton instance. */
    private static final ${glLazyLoadContainerClassName} _instance = new ${glLazyLoadContainerClassName}();

    // =====================================================================================
    //                                                                             Attribute
    //                                                                             =========
    /** Dao-selector instance. */
    protected ${glDaoSelectorInterfaceName} _daoSelector;

    /**
     * Constructor.
     */
    private ${glLazyLoadContainerClassName}() {
    }

    /**
     * Get instance.
     * 
     * @return Singleton instance. (NotNull)
     */
    public static ${glLazyLoadContainerClassName} getInstance() {
        return _instance;
    }

    // =====================================================================================
    //                                                                              Accessor
    //                                                                              ========
    /**
     * Get dao-selector.
     * 
     * @return Dao-selector.
     */
    public ${glDaoSelectorInterfaceName} getDaoSelector() {
        return _daoSelector;
    }

    /**
     * Set dao-selector.
     * 
     * @param value Dao-selector.
     */
    public void setDaoSelector(${glDaoSelectorInterfaceName} value) {
        _daoSelector = value;
    }

    /**
     * Get dao-instance.
     * 
     * @param clazz Dao-class.
     * @return Dao-instance.
     */
    public ${glDaoReadableInterfaceName} getDaoInstance(Class clazz) {
        if (_daoSelector == null) {
            String msg = "daoSelector is null. If you use LazyLoad, ";
            msg = msg + "initialize LazyLoadContainer.";
            throw new IllegalStateException(msg);
        }
        return _daoSelector.getRDao(clazz);
    }
}
