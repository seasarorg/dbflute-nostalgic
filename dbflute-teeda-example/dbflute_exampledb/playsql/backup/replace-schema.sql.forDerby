CREATE TABLE PURCHASE
(
	PURCHASE_ID bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	MEMBER_ID integer NOT NULL,
	PRODUCT_ID integer NOT NULL,
	PURCHASE_DATETIME timestamp NOT NULL,
	PURCHASE_COUNT INTEGER NOT NULL,
	PURCHASE_PRICE INTEGER NOT NULL,
	PAYMENT_COMPLETE_FLG INTEGER NOT NULL,
	REGISTER_DATETIME timestamp NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_DATETIME timestamp NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL
)  ;


CREATE TABLE MEMBER_WITHDRAWAL
(
	MEMBER_ID integer NOT NULL,
	WITHDRAWAL_REASON_CODE CHAR(3),
	WITHDRAWAL_REASON_INPUT_TEXT clob,
	WITHDRAWAL_DATETIME timestamp NOT NULL,
	REGISTER_DATETIME timestamp NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	UPDATE_DATETIME timestamp NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL
)  ;


CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID integer NOT NULL,
	LOGIN_PASSWORD VARCHAR(50) NOT NULL,
	REMINDER_QUESTION VARCHAR(50) NOT NULL,
	REMINDER_ANSWER VARCHAR(50) NOT NULL,
	REGISTER_DATETIME timestamp NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	UPDATE_DATETIME timestamp NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL
)  ;


CREATE TABLE PRODUCT
(
	PRODUCT_ID integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	PRODUCT_NAME VARCHAR(50) NOT NULL,
	PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL,
	PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
	REGISTER_DATETIME timestamp NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_DATETIME timestamp NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL
)  ;


CREATE TABLE MEMBER
(
	MEMBER_ID integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	MEMBER_NAME VARCHAR(200) NOT NULL,
	MEMBER_NO VARCHAR(50) NOT NULL,
	MEMBER_STATUS_CODE CHAR(3) NOT NULL,
	MEMBER_FORMALIZED_DATETIME timestamp,
	MEMBER_BIRTHDAY DATE,
	REGISTER_DATETIME timestamp NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_DATETIME timestamp NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL
)  ;


CREATE TABLE MEMBER_LOGIN
(
	MEMBER_LOGIN_ID integer NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1),
	MEMBER_ID integer NOT NULL,
	LOGIN_DATETIME timestamp NOT NULL,
	LOGIN_MOBILE_FLG INTEGER NOT NULL,
	LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL
)  ;


CREATE TABLE WITHDRAWAL_REASON
(
	WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL,
	WITHDRAWAL_REASON_TEXT clob NOT NULL,
	DISPLAY_ORDER INTEGER NOT NULL
)  ;


CREATE TABLE PRODUCT_STATUS
(
	PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
	PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL
)  ;


CREATE TABLE MEMBER_STATUS
(
	MEMBER_STATUS_CODE CHAR(3) NOT NULL,
	MEMBER_STATUS_NAME VARCHAR(50) NOT NULL,
	DISPLAY_ORDER INTEGER NOT NULL
)  ;


ALTER TABLE PURCHASE ADD CONSTRAINT PK_PURCHASE
	PRIMARY KEY (PURCHASE_ID) ;

ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT
	PRIMARY KEY (PRODUCT_ID) ;

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER
	PRIMARY KEY (MEMBER_ID) ;

ALTER TABLE MEMBER_LOGIN ADD CONSTRAINT PK_MEMBER_LOGIN
	PRIMARY KEY (MEMBER_LOGIN_ID) ;

ALTER TABLE MEMBER_WITHDRAWAL ADD CONSTRAINT PK_MEMBER_WITHDRAWAL
	PRIMARY KEY (MEMBER_ID) ;

ALTER TABLE MEMBER_SECURITY ADD CONSTRAINT PK_MEMBER_SECURITY
	PRIMARY KEY (MEMBER_ID) ;

ALTER TABLE MEMBER_STATUS ADD CONSTRAINT PK_MEMBER_STATUS
	PRIMARY KEY (MEMBER_STATUS_CODE) ;

ALTER TABLE PRODUCT_STATUS ADD CONSTRAINT PK_PRODUCT_STATUS
	PRIMARY KEY (PRODUCT_STATUS_CODE) ;

ALTER TABLE WITHDRAWAL_REASON ADD CONSTRAINT PK_WITHDRAWAL_REASON
	PRIMARY KEY (WITHDRAWAL_REASON_CODE) ;



ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_MEMBER 
	FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID) ;

ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_PRODUCT 
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID) ;

ALTER TABLE MEMBER_WITHDRAWAL ADD CONSTRAINT FK_MEMBER_WITHDRAWAL_INFO_MEMBER 
	FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID) ;

ALTER TABLE MEMBER_WITHDRAWAL ADD CONSTRAINT FK_MEMBER_WITHDRAWAL_INFO_WITHDRAWAL_REASON 
	FOREIGN KEY (WITHDRAWAL_REASON_CODE) REFERENCES WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE) ;

ALTER TABLE MEMBER_SECURITY ADD CONSTRAINT FK_MEMBER_SC_INFO_MEMBER 
	FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID) ;

ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_PRODUCT_STATUS 
	FOREIGN KEY (PRODUCT_STATUS_CODE) REFERENCES PRODUCT_STATUS (PRODUCT_STATUS_CODE) ;

ALTER TABLE MEMBER ADD CONSTRAINT FK_MEMBER_MEMBER_STATUS 
	FOREIGN KEY (MEMBER_STATUS_CODE) REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE) ;

ALTER TABLE MEMBER_LOGIN ADD CONSTRAINT FK_MEMBER_LOGIN_MEMBER_STATUS 
	FOREIGN KEY (LOGIN_MEMBER_STATUS_CODE) REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE) ;




ALTER TABLE PURCHASE ADD CONSTRAINT UQ_PURCHASE UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME) ;
ALTER TABLE PRODUCT ADD CONSTRAINT UQ_PRODUCT_PRODUCT_HANDLE_CODE UNIQUE (PRODUCT_HANDLE_CODE) ;
ALTER TABLE WITHDRAWAL_REASON ADD CONSTRAINT UQ_WITHDRAWAL_REASON_DISPLAY_ORDER UNIQUE (DISPLAY_ORDER) ;
ALTER TABLE PRODUCT_STATUS ADD CONSTRAINT UQ_PRODUCT_STATUS_PRODUCT_STATUS_NAME UNIQUE (PRODUCT_STATUS_NAME) ;
ALTER TABLE MEMBER ADD CONSTRAINT UQ_MEMBER_MEMBER_NO UNIQUE (MEMBER_NO) ;
ALTER TABLE MEMBER_LOGIN ADD CONSTRAINT UQ_MEMBER_LOGIN UNIQUE (MEMBER_ID, LOGIN_DATETIME) ;
ALTER TABLE MEMBER_STATUS ADD CONSTRAINT UQ_MEMBER_STATUS_MEMBER_STATUS_NAME UNIQUE (MEMBER_STATUS_NAME) ;
ALTER TABLE MEMBER_STATUS ADD CONSTRAINT UQ_MEMBER_STATUS_DISPLAY_ORDER UNIQUE (DISPLAY_ORDER) ;
