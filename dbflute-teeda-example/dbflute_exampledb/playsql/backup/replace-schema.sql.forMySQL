CREATE TABLE PURCHASE
(
	PURCHASE_ID BIGINT NOT NULL,
	MEMBER_ID INTEGER NOT NULL,
	PRODUCT_ID INTEGER NOT NULL,
	PURCHASE_DATETIME DATETIME NOT NULL,
	PURCHASE_COUNT INTEGER NOT NULL,
	PURCHASE_PRICE INTEGER NOT NULL,
	PAYMENT_COMPLETE_FLG INTEGER NOT NULL,
	REGISTER_DATETIME DATETIME NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_DATETIME DATETIME NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL,
	PRIMARY KEY (PURCHASE_ID),
	UNIQUE (MEMBER_ID, PRODUCT_ID, PURCHASE_DATETIME),
	KEY (MEMBER_ID),
	KEY (PRODUCT_ID)
)  ;


CREATE TABLE MEMBER_WITHDRAWAL
(
	MEMBER_ID INTEGER NOT NULL,
	WITHDRAWAL_REASON_CODE CHAR(3),
	WITHDRAWAL_REASON_INPUT_TEXT TEXT,
	WITHDRAWAL_DATETIME DATETIME NOT NULL,
	REGISTER_DATETIME DATETIME NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	UPDATE_DATETIME DATETIME NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL,
	PRIMARY KEY (MEMBER_ID),
	KEY (MEMBER_ID),
	KEY (WITHDRAWAL_REASON_CODE)
)  ;


CREATE TABLE MEMBER_SECURITY
(
	MEMBER_ID INTEGER NOT NULL,
	LOGIN_PASSWORD VARCHAR(50) NOT NULL,
	REMINDER_QUESTION VARCHAR(50) NOT NULL,
	REMINDER_ANSWER VARCHAR(50) NOT NULL,
	REGISTER_DATETIME DATETIME NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	UPDATE_DATETIME DATETIME NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL,
	PRIMARY KEY (MEMBER_ID),
	KEY (MEMBER_ID)
)  ;


CREATE TABLE MEMBER_LOGIN
(
	MEMBER_LOGIN_ID BIGINT NOT NULL,
	MEMBER_ID INTEGER NOT NULL,
	LOGIN_DATETIME DATETIME NOT NULL,
	LOGIN_MOBILE_FLG INTEGER NOT NULL,
	LOGIN_MEMBER_STATUS_CODE CHAR(3) NOT NULL,
	PRIMARY KEY (MEMBER_LOGIN_ID),
	UNIQUE (MEMBER_ID, LOGIN_DATETIME),
	KEY (MEMBER_ID),
	KEY (LOGIN_MEMBER_STATUS_CODE)
)  ;


CREATE TABLE PRODUCT
(
	PRODUCT_ID INTEGER NOT NULL,
	PRODUCT_NAME VARCHAR(50) NOT NULL,
	PRODUCT_HANDLE_CODE VARCHAR(100) NOT NULL,
	PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
	REGISTER_DATETIME DATETIME NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_DATETIME DATETIME NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL,
	PRIMARY KEY (PRODUCT_ID),
	UNIQUE (PRODUCT_HANDLE_CODE),
	KEY (PRODUCT_STATUS_CODE)
)  ;


CREATE TABLE MEMBER
(
	MEMBER_ID INTEGER NOT NULL,
	MEMBER_NAME VARCHAR(200) NOT NULL,
	MEMBER_ACCOUNT VARCHAR(50) NOT NULL,
	MEMBER_STATUS_CODE CHAR(3) NOT NULL,
	MEMBER_FORMALIZED_DATETIME DATETIME,
	MEMBER_BIRTHDAY DATE,
	REGISTER_DATETIME DATETIME NOT NULL,
	REGISTER_USER VARCHAR(200) NOT NULL,
	REGISTER_PROCESS VARCHAR(200) NOT NULL,
	UPDATE_DATETIME DATETIME NOT NULL,
	UPDATE_USER VARCHAR(200) NOT NULL,
	UPDATE_PROCESS VARCHAR(200) NOT NULL,
	VERSION_NO BIGINT NOT NULL,
	PRIMARY KEY (MEMBER_ID),
	UNIQUE (MEMBER_ACCOUNT),
	KEY (MEMBER_STATUS_CODE)
)  ;


CREATE TABLE WITHDRAWAL_REASON
(
	WITHDRAWAL_REASON_CODE CHAR(3) NOT NULL,
	WITHDRAWAL_REASON_TEXT TEXT NOT NULL,
	DISPLAY_ORDER INTEGER NOT NULL,
	PRIMARY KEY (WITHDRAWAL_REASON_CODE),
	UNIQUE (DISPLAY_ORDER)
)  ;


CREATE TABLE PRODUCT_STATUS
(
	PRODUCT_STATUS_CODE CHAR(3) NOT NULL,
	PRODUCT_STATUS_NAME VARCHAR(50) NOT NULL,
	PRIMARY KEY (PRODUCT_STATUS_CODE),
	UNIQUE (PRODUCT_STATUS_NAME)
)  ;


CREATE TABLE MEMBER_STATUS
(
	MEMBER_STATUS_CODE CHAR(3) NOT NULL,
	MEMBER_STATUS_NAME VARCHAR(50) NOT NULL,
	DISPLAY_ORDER INTEGER NOT NULL,
	PRIMARY KEY (MEMBER_STATUS_CODE),
	UNIQUE (DISPLAY_ORDER),
	UNIQUE (MEMBER_STATUS_NAME)
)  ;





ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_MEMBER 
	FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID) ;

ALTER TABLE PURCHASE ADD CONSTRAINT FK_PURCHASE_PRODUCT 
	FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCT (PRODUCT_ID) ;

ALTER TABLE MEMBER_WITHDRAWAL ADD CONSTRAINT FK_MEMBER_WITHDRAWAL_INFO_MEMBER 
	FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID) ;

ALTER TABLE MEMBER_WITHDRAWAL ADD CONSTRAINT FK_MEMBER_WITHDRAWAL_INFO_WITHDRAWAL_REASON 
	FOREIGN KEY (WITHDRAWAL_REASON_CODE) REFERENCES WITHDRAWAL_REASON (WITHDRAWAL_REASON_CODE) ;

ALTER TABLE MEMBER_SECURITY ADD CONSTRAINT FK_MEMBER_SC_INFO_MEMBER 
	FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID) ;

ALTER TABLE MEMBER_LOGIN ADD CONSTRAINT FK_MEMBER_LOGIN_MEMBER 
	FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID) ;

ALTER TABLE MEMBER_LOGIN ADD CONSTRAINT FK_MEMBER_LOGIN_MEMBER_STATUS 
	FOREIGN KEY (LOGIN_MEMBER_STATUS_CODE) REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE) ;

ALTER TABLE PRODUCT ADD CONSTRAINT FK_PRODUCT_PRODUCT_STATUS 
	FOREIGN KEY (PRODUCT_STATUS_CODE) REFERENCES PRODUCT_STATUS (PRODUCT_STATUS_CODE) ;

ALTER TABLE MEMBER ADD CONSTRAINT FK_MEMBER_MEMBER_STATUS 
	FOREIGN KEY (MEMBER_STATUS_CODE) REFERENCES MEMBER_STATUS (MEMBER_STATUS_CODE) ;
