# =======================================================================================
#                                                                                 for All
#                                                                                 =======

# -------------------------------------------------------------------
#  P R O J E C T
# -------------------------------------------------------------------
# @FirstProperty
# @Required
torque.project = exampledb

# -------------------------------------------------------------------
#  T A R G E T  D A T A B A S E
# -------------------------------------------------------------------
# This is the target database, only considered when generating
# the SQL for your Torque project. Your possible choices are:
#
#   axion, cloudscape, db2, db2400, hypersonic, interbase, mssql,
#   mysql, oracle, postgresql, sapdb, sybase, firebird, derby
# -------------------------------------------------------------------
# @FirstProperty
# @Required
torque.database = h2

# -------------------------------------------------------------------
#  T A R G E T  L A N G U A G E
# -------------------------------------------------------------------
# (Default 'java')
#   The target language. Your possible choices are:
#     java, csharp
# -------------------------------------------------------------------
# @FirstProperty
#torque.targetLanguage = java

# -------------------------------------------------------------------
#  T E M P L A T E  E N C O D I N G
# -------------------------------------------------------------------
# (Default 'UTF-8')
#   The encoding of Velocity template file.
# -------------------------------------------------------------------
#torque.templateFileEncoding = UTF-8

# -------------------------------------------------------------------
#  S O U R C E  F I L E  E N C O D I N G
# -------------------------------------------------------------------
# (Default 'UTF-8')
#   The encoding of source file.
# -------------------------------------------------------------------
#torque.sourceFileEncoding = UTF-8



# =======================================================================================
#                                                                             for OM task
#                                                                             ===========

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                            Basic
#                                                         _/_/_/_/
# /---------------------------------------------------------------------------
# [Output Directory]
#   java.dir: (Default Java:'../src/main/java' CSharp:'../source')
#     The base output directory.
#
#   *Java Project Style
#     If this value is '../src/main/java' and your project type is under maven,
#     you don't need to set up this property!
#
#     {app-project}
#         |
#         |-dbflute_[project]
#         |       |-build-[project].properties
#         |       |-...
#         |
#         |-src/main/java         // *Here!
#         |-src/main/resources
#         |-...
#
#   *CSharp Project Style
#     [app-solution]/dbflute_[project]/build-[project].properties
#     [app-solution]/mydbflute/dbflute-0.6.0
#     [app-solution]/source/[app-solution].sln
#     [app-solution]/source/[app-project(top-namespace)]/[part-namespace]/AllCommon
#     [app-solution]/source/[app-project(top-namespace)]/[part-namespace]/BsBhv
#     [app-solution]/source/[app-project(top-namespace)]/[part-namespace]/...
#     [app-solution]/source/[app-project(top-namespace)]/Resources/DBFlute.dicon
#     [app-solution]/source/[app-project(top-namespace)]/Resources/Ado.dicon
#
# @FirstProperty
#torque.java.dir = ../src/main/java
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                          Package
#                                                             _/_/
# /---------------------------------------------------------------------------
# [EntityDao Package]
#    packageBase: (Default '')
#      The base directory of package.
#
#      *If this property is specified and other package properties is not specified, 
#       Then The packages of generated class are as follows:
#
#        ex) packageBase = org.seasar.dbflute.example.dbflute.ldb
#              baseCommonPackage       --> org.seasar.dbflute.example.dbflute.ldb.allcommon
#              baseBehaviorPackage     --> org.seasar.dbflute.example.dbflute.ldb.bsbhv
#              baseDaoPackage          --> org.seasar.dbflute.example.dbflute.ldb.bsdao
#              baseEntityPackage       --> org.seasar.dbflute.example.dbflute.ldb.bsentity
#              conditionBeanPackage    --> org.seasar.dbflute.example.dbflute.ldb.cbean
#              extendedBehaviorPackage --> org.seasar.dbflute.example.dbflute.ldb.exbhv
#              extendedDaoPackage      --> org.seasar.dbflute.example.dbflute.ldb.exdao
#              extendedEntityPackage   --> org.seasar.dbflute.example.dbflute.ldb.exentity
#
#      *If this property is not specified, you should specify the other package properties.
#
#
#    baseCommonPackage:       (Default Java:'allcommon' C#:'allcommon')
#    baseBehaviorPackage:     (Default Java:'bsbhv'     C#:'bsbhv')
#    baseDaoPackage:          (Default Java:'bsdao'     C#:'bsdao')
#    baseEntityPackage:       (Default Java:'bsentity'  C#:'bsentity')
#    conditionBeanPackage:    (Default Java:'cbean'     C#:'cbean')
#    extendedBehaviorPackage: (Default Java:'exbhv'     C#:'exbhv')
#    extendedDaoPackage:      (Default Java:'exdao'     C#:'exdao')
#    extendedEntityPackage:   (Default Java:'exentity'  C#:'exentity')
#
# @FirstProperty
torque.packageBase = com.example.dbflute.teeda.dbflute
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                 S2Dao Adjustment
#                                                     _/_/_/_/_/_/
# /---------------------------------------------------------------------------
# [S2Dao Version]
#   s2daoVersion: (Default [The latest version])
#
# @JavaOnly
torque.s2daoVersion = 1.0.47
# ----------------/

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                Little Adjustment
#                                                     _/_/_/_/_/_/
torque.isDeleteOldTableClass = true

# _/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/_/
#                                                    Method Making
#                                                         _/_/_/_/
# /---------------------------------------------------------------------------
# [Make Deprecated]
#   isMakeDeprecated: (Default 'false')
#     [true]
#       Make deprecated method and class and so on...
#       *You shuold set this property FALSE!
#
#   isMakeRecentlyDeprecated: (Default 'true')
#     [true]
#       Make RECENTLY deprecated method and class and so on...
#       *You shuold set this property FALSE!
#
torque.isMakeRecentlyDeprecated = false
# ----------------/



# =======================================================================================
#                                                                           for JDBC task
#                                                                           =============

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# [Database Informaition]
# 
#   * * * * * * * * * * * * * * * * * * * * * * * * *
#   You shuold use './dfprop/databaseInfoMap.dfprop'
#   Look the file!
#   * * * * * * * * * * * * * * * * * * * * * * * * *
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


# /---------------------------------------------------------------------------
# [Target Database Object]
#   database.type.list: (Default 'list:{TABLE;VIEW}')
#
#   table.except.list: (NotNull 'list:{}')
#     Unnecessary tables.
#
#     For example, if you want to except the table that the name starts with 'D_',
#     you should set this property as follows:
#       ex) list:{prefix:D_}
#
#     And other example:
#       ex) list:{prefix:D_; suffix:_Test; sysobjects; dtproperties}
#
#
#   table.target.list: (Default 'list:{}' --> All tables are target)
#     Target tables.
#     If this property is empty-list, the property of [Unnecessary tables] is valid.
#
#     For example, if you want to contains the table that the name starts with 'D_',
#     you should set this property as follows:
#       ex) list:{prefix:D_}
# 
#     And other example:
#       ex) list:{prefix:D_; suffix:_Test; sysobjects; dtproperties}
# 
#     If the table defined at this property is defined at [Unnecessary tables] too,
#     the table is target of generating.
#
#
#   torque.simple.column.except.list: (Default 'list:{}' --> All columns are target)
#     Unnecessary columns.
#
#     For example, if you want to except the column that the name starts with 'TMP_',
#     you should set this property as follows:
#       ex) list:{prefix:TMP_}
#
#
# @FirstProperty
#torque.database.type.list = list:{TABLE;VIEW}
#torque.table.except.list = list:{}
#torque.table.target.list = list:{}
#torque.simple.column.except.list = list:{}
# ----------------/



# =========================================================================================
#                                                                              for Internal
#                                                                              ============
# Normally you don't need to change these properties.

#
# [JDBC to java-native mapping] (NotRequired - Default 'map:{}')
#
# ex) map:{INTEGER=java.lang.Integer;TIMESTAMP=java.util.Date}
# ex) map:{} // If you don't want to change...
#
# Default mapping as follows:
# * ----------------------------------------------------
# * JDBC Type     | Java Type            | CSharp Type |
# * ----------------------------------------------------
# * CHAR          | java.lang.String     | String      |
# * VARCHAR       | java.lang.String     | String      |
# * LONGVARCHAR   | java.lang.String     | String      |
# * NUMERIC       | java.math.BigDecimal | decimal?    |
# * DECIMAL       | java.math.BigDecimal | decimal?    |
# * BIT           | java.lang.Boolean    | bool?       |
# * BOOLEAN       | java.lang.Boolean    | bool?       |
# * TINYINT       | java.lang.Integer    | int?        |
# * SMALLINT      | java.lang.Integer    | int?        |
# * INTEGER       | java.lang.Integer    | int?        |
# * BIGINT        | java.lang.Long       | long?       |
# * REAL          | java.math.BigDecimal | decimal?    |
# * FLOAT         | java.math.BigDecimal | decimal?    |
# * DOUBLE        | java.math.BigDecimal | decimal?    |
# * BINARY        | byte[]               | byte[]      |
# * VARBINARY     | byte[]               | byte[]      |
# * LONGVARBINARY | byte[]               | byte[]      |
# * DATE          | java.util.Date       | DateTime?   |
# * TIME          | java.sql.Time        | DateTime?   |
# * TIMESTAMP     | java.sql.Timestamp   | DateTime?   |
# * ----------------------------------------------------
# torque.jdbcToJavaNativeMap = map:{NUMERIC=$$AutoMapping$$;DECIMAL=$$AutoMapping$$}

